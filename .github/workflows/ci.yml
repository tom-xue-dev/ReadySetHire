name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  server-ci:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:15-alpine
        env:
          POSTGRES_DB: readysethire
          POSTGRES_USER: readysethire_user
          POSTGRES_PASSWORD: readysethire_password
        ports:
          - 5432:5432
        options: >-
          --health-cmd="pg_isready -U readysethire_user -d readysethire" 
          --health-interval=10s --health-timeout=5s --health-retries=5

    steps:
      - uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: 'npm'

      - name: Install server deps
        working-directory: server
        run: npm ci

      - name: Create .env
        working-directory: server
        run: |
          cat > .env << 'EOF'
          NODE_ENV=development
          PORT=3000
          DATABASE_URL=postgresql://readysethire_user:readysethire_password@localhost:5432/readysethire?schema=public
          JWT_SECRET=ci-secret
          CORS_ORIGIN=http://localhost:5173
          LOG_LEVEL=debug
          EOF

      - name: Generate Prisma client
        working-directory: server
        run: npx prisma generate

      - name: Migrate database
        working-directory: server
        run: npx prisma migrate deploy

      - name: Seed database
        working-directory: server
        run: npx tsx src/db/seed.ts

      - name: Build server
        working-directory: server
        run: npm run build

      - name: Run tests (unit + minimal e2e)
        working-directory: server
        env:
          NODE_ENV: test
        run: npm run test:unit -- --runInBand && npm run test